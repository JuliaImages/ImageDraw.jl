var documenterSearchIndex = {"docs":
[{"location":"references/#function_reference","page":"Function References","title":"Function References","text":"","category":"section"},{"location":"references/","page":"Function References","title":"Function References","text":"Pages = [\"reference.md\"]\nDepth = 3","category":"page"},{"location":"references/#Methods","page":"Function References","title":"Methods","text":"","category":"section"},{"location":"references/","page":"Function References","title":"Function References","text":"draw\ndraw!\nbresenham\nxiaolin_wu","category":"page"},{"location":"references/#ImageDraw.draw","page":"Function References","title":"ImageDraw.draw","text":"img_new = draw(img, drawable, color)\nimg_new = draw(img, [drawable], [color])\n\nDraws the drawable object on a copy of image img using color color. Can also draw multiple Drawable objects when passed as a AbstractVector{Drawable} with corresponding colors in [color]\n\n\n\n\n\n","category":"function"},{"location":"references/#ImageDraw.draw!","page":"Function References","title":"ImageDraw.draw!","text":"img = draw!(img, drawable, color)\nimg = draw!(img, drawable)\n\nDraws drawable on img using color color which defaults to oneunit(eltype(img))\n\n\n\n\n\nimg = draw!(img, [drawable], [color])\nimg = draw!(img, [drawable] ,color)\nimg = draw!(img, [drawable])\n\nDraws all objects in [drawable] in the given order on img using corresponding colors from [color] which defaults to oneunit(eltype(img)) If only a single color color is specified then all objects will be colored with that color.\n\n\n\n\n\n","category":"function"},{"location":"references/#ImageDraw.bresenham","page":"Function References","title":"ImageDraw.bresenham","text":"res = bresenham(img, y0, x0, y1, x1, color)\n\nMethod to generate a line profile from (x0,y0) to (x1,y1) of a 2d image using Bresenham's algorithm.\n\n\n\n\n\n","category":"function"},{"location":"references/#ImageDraw.xiaolin_wu","page":"Function References","title":"ImageDraw.xiaolin_wu","text":"res = xiaolin_wu(img, x0, y0, x1, x2, color)\n\nMethod to generate a line profile from (x0,y0) to (x1,y1) of a 2d image using Xiaolin Wu line algorithm.\n\n\n\n\n\n","category":"function"},{"location":"#ImageDraw.jl-Documentation","page":"ImageDraw.jl Documentation","title":"ImageDraw.jl Documentation","text":"","category":"section"},{"location":"","page":"ImageDraw.jl Documentation","title":"ImageDraw.jl Documentation","text":"A drawing package for JuliaImages","category":"page"},{"location":"","page":"ImageDraw.jl Documentation","title":"ImageDraw.jl Documentation","text":"Depth = 3","category":"page"},{"location":"#introduction","page":"ImageDraw.jl Documentation","title":"introduction","text":"","category":"section"},{"location":"","page":"ImageDraw.jl Documentation","title":"ImageDraw.jl Documentation","text":"ImageDraw supports basic drawing on Images. You can draw points, lines, circles, ellipse and paths.  ","category":"page"},{"location":"#Basic-usage","page":"ImageDraw.jl Documentation","title":"Basic usage","text":"","category":"section"},{"location":"","page":"ImageDraw.jl Documentation","title":"ImageDraw.jl Documentation","text":"Let's start with a drawing a circle","category":"page"},{"location":"","page":"ImageDraw.jl Documentation","title":"ImageDraw.jl Documentation","text":"mkpath(\"images\")","category":"page"},{"location":"","page":"ImageDraw.jl Documentation","title":"ImageDraw.jl Documentation","text":"using TestImages, ImageDraw, ColorVectorSpace\nusing FileIO # hide\nimg = testimage(\"lighthouse\")\n\n# Detect edges at different scales by adjusting the `spatial_scale` parameter.\ndraw!(img, Ellipse(CirclePointRadius(350,200,100)))\nsave(\"images/lighthouse_circle.png\", img) # hide","category":"page"},{"location":"","page":"ImageDraw.jl Documentation","title":"ImageDraw.jl Documentation","text":"When displayed, these three images look like this:","category":"page"},{"location":"","page":"ImageDraw.jl Documentation","title":"ImageDraw.jl Documentation","text":"<img src=\"images/lighthouse_circle.png\" width=\"512px\" alt=\"edge detection demo 1 image\" />\n<p>","category":"page"},{"location":"","page":"ImageDraw.jl Documentation","title":"ImageDraw.jl Documentation","text":"Drawing a Cross.","category":"page"},{"location":"","page":"ImageDraw.jl Documentation","title":"ImageDraw.jl Documentation","text":"using TestImages, ImageDraw, ColorVectorSpace, ImageCore\nusing FileIO # hide\nimg = testimage(\"lighthouse\");\n\ndraw!(img, Cross(Point(200,150), 50), RGB{N0f8}(1))\n\nsave(\"images/lighthouse_cross.png\", img) # hide","category":"page"},{"location":"","page":"ImageDraw.jl Documentation","title":"ImageDraw.jl Documentation","text":"<img src=\"images/lighthouse_cross.png\" width=\"512px\" alt=\"edge detection demo 1 image\" />\n<p>","category":"page"}]
}
